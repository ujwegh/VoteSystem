DROP TABLE user_roles IF EXISTS;
DROP TABLE meals IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 10000;

CREATE TABLE restaurants
(
  id           INTEGER        GENERATED BY DEFAULT AS sequence GLOBAL_SEQ primary key,
  name         VARCHAR(255)   NOT NULL,
  vote_count   INT DEFAULT 0  NOT NULL
);
CREATE UNIQUE INDEX restaurants_unique_name_idx ON RESTAURANTS (name);

CREATE TABLE meals
(
  id                INTEGER      GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name              VARCHAR(255) NOT NULL,
  price             INT          NOT NULL,
  date              DATE         NOT NULL,
  restaurant_id     INTEGER      NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id) ON DELETE CASCADE
);

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  email            VARCHAR(255)            NOT NULL,
  password         VARCHAR(255)            NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE    NOT NULL,
  registered       TIMESTAMP DEFAULT now() NOT NULL,
  voting_date      DATE DEFAULT NULL,
  restaurant       INT,
  FOREIGN KEY (restaurant) REFERENCES RESTAURANTS (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX users_unique_email_idx ON USERS (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);




